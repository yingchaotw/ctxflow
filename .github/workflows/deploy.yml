name: CI/CD for ctxflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ctxflow/mcp-server/requirements.txt
        pip install flake8

    - name: Lint with flake8
      run: |
        flake8 ctxflow/mcp-server --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: Generate .env from template
      run: |
        cp .env.example .env
        sed -i "s/your_cwa_api_key_here/${{ secrets.CWA_API_KEY }}/g" .env
        sed -i "s/your_openai_api_key_here/${{ secrets.OPENAI_API_KEY }}/g" .env
        sed -i "s/your_gemini_api_key_here/${{ secrets.GEMINI_API_KEY }}/g" .env
        sed -i "s/your_deepseek_api_key_here/${{ secrets.DEEPSEEK_API_KEY }}/g" .env
        sed -i "s/your_username_here/${{ secrets.N8N_BASIC_AUTH_USER }}/g" .env
        sed -i "s/your_password_here/${{ secrets.N8N_BASIC_AUTH_PASSWORD }}/g" .env
        sed -i "s/false/${{ secrets.N8N_SECURE_COOKIE }}/g" .env
        sed -i "s/true/${{ secrets.N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS }}/g" .env
        sed -i "s/community/${{ secrets.N8N_DEPLOYMENT_TYPE }}/g" .env
        sed -i "s/localhost/${{ secrets.N8N_HOST }}/g" .env
        sed -i "s/5678/${{ secrets.N8N_PORT }}/g" .env
        sed -i "s/8000/${{ secrets.MCP_SERVER_PORT }}/g" .env

    - name: Test Docker Compose Build
      run: docker-compose -f ctxflow/docker-compose.yml build


  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # 很重要，否則 semantic-release 無法讀完整 Git 歷史

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install semantic-release
      run: npm install -g semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github

    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub 預設提供的權限
      run: semantic-release